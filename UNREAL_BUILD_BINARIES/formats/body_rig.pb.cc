// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/framework/formats/body_rig.proto

#include "mediapipe/framework/formats/body_rig.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mediapipe {
constexpr Joint::Joint(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rotation_6d_()
  , visibility_(0){}
struct JointDefaultTypeInternal {
  constexpr JointDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JointDefaultTypeInternal() {}
  union {
    Joint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JointDefaultTypeInternal _Joint_default_instance_;
constexpr JointList::JointList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : joint_(){}
struct JointListDefaultTypeInternal {
  constexpr JointListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JointListDefaultTypeInternal() {}
  union {
    JointList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JointListDefaultTypeInternal _JointList_default_instance_;
}  // namespace mediapipe
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto = nullptr;

const uint32_t TableStruct_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::Joint, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::Joint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mediapipe::Joint, rotation_6d_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::Joint, visibility_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mediapipe::JointList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mediapipe::JointList, joint_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::mediapipe::Joint)},
  { 10, -1, -1, sizeof(::mediapipe::JointList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_Joint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_JointList_default_instance_),
};

const char descriptor_table_protodef_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*mediapipe/framework/formats/body_rig.p"
  "roto\022\tmediapipe\"0\n\005Joint\022\023\n\013rotation_6d\030"
  "\001 \003(\002\022\022\n\nvisibility\030\002 \001(\002\",\n\tJointList\022\037"
  "\n\005joint\030\001 \003(\0132\020.mediapipe.Joint"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto = {
  false, false, 151, descriptor_table_protodef_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto, "mediapipe/framework/formats/body_rig.proto", 
  &descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto::offsets,
  file_level_metadata_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto, file_level_enum_descriptors_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto, file_level_service_descriptors_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto_getter() {
  return &descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto(&descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto);
namespace mediapipe {

// ===================================================================

class Joint::_Internal {
 public:
  using HasBits = decltype(std::declval<Joint>()._has_bits_);
  static void set_has_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Joint::Joint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  rotation_6d_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mediapipe.Joint)
}
Joint::Joint(const Joint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      rotation_6d_(from.rotation_6d_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  visibility_ = from.visibility_;
  // @@protoc_insertion_point(copy_constructor:mediapipe.Joint)
}

inline void Joint::SharedCtor() {
visibility_ = 0;
}

Joint::~Joint() {
  // @@protoc_insertion_point(destructor:mediapipe.Joint)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Joint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Joint::ArenaDtor(void* object) {
  Joint* _this = reinterpret_cast< Joint* >(object);
  (void)_this;
}
void Joint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Joint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Joint::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.Joint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rotation_6d_.Clear();
  visibility_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Joint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float rotation_6d = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_rotation_6d(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
            ptr += sizeof(float);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<13>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_rotation_6d(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float visibility = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_visibility(&has_bits);
          visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Joint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.Joint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float rotation_6d = 1;
  for (int i = 0, n = this->_internal_rotation_6d_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_rotation_6d(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional float visibility = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_visibility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.Joint)
  return target;
}

size_t Joint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.Joint)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float rotation_6d = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_rotation_6d_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_rotation_6d_size());
    total_size += data_size;
  }

  // optional float visibility = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Joint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Joint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Joint::GetClassData() const { return &_class_data_; }

void Joint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Joint *>(to)->MergeFrom(
      static_cast<const Joint &>(from));
}


void Joint::MergeFrom(const Joint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.Joint)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  rotation_6d_.MergeFrom(from.rotation_6d_);
  if (from._internal_has_visibility()) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Joint::CopyFrom(const Joint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.Joint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Joint::IsInitialized() const {
  return true;
}

void Joint::InternalSwap(Joint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  rotation_6d_.InternalSwap(&other->rotation_6d_);
  swap(visibility_, other->visibility_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Joint::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto_getter, &descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto_once,
      file_level_metadata_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto[0]);
}

// ===================================================================

class JointList::_Internal {
 public:
};

JointList::JointList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  joint_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mediapipe.JointList)
}
JointList::JointList(const JointList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      joint_(from.joint_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mediapipe.JointList)
}

inline void JointList::SharedCtor() {
}

JointList::~JointList() {
  // @@protoc_insertion_point(destructor:mediapipe.JointList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JointList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void JointList::ArenaDtor(void* object) {
  JointList* _this = reinterpret_cast< JointList* >(object);
  (void)_this;
}
void JointList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JointList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JointList::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.JointList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joint_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JointList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .mediapipe.Joint joint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_joint(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JointList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.JointList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mediapipe.Joint joint = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_joint_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_joint(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.JointList)
  return target;
}

size_t JointList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.JointList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mediapipe.Joint joint = 1;
  total_size += 1UL * this->_internal_joint_size();
  for (const auto& msg : this->joint_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JointList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JointList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JointList::GetClassData() const { return &_class_data_; }

void JointList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JointList *>(to)->MergeFrom(
      static_cast<const JointList &>(from));
}


void JointList::MergeFrom(const JointList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.JointList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  joint_.MergeFrom(from.joint_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JointList::CopyFrom(const JointList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.JointList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointList::IsInitialized() const {
  return true;
}

void JointList::InternalSwap(JointList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  joint_.InternalSwap(&other->joint_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JointList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto_getter, &descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto_once,
      file_level_metadata_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::Joint* Arena::CreateMaybeMessage< ::mediapipe::Joint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::Joint >(arena);
}
template<> PROTOBUF_NOINLINE ::mediapipe::JointList* Arena::CreateMaybeMessage< ::mediapipe::JointList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::JointList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
