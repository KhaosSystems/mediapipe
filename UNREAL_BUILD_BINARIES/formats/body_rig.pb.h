// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/framework/formats/body_rig.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto;
namespace mediapipe {
class Joint;
struct JointDefaultTypeInternal;
extern JointDefaultTypeInternal _Joint_default_instance_;
class JointList;
struct JointListDefaultTypeInternal;
extern JointListDefaultTypeInternal _JointList_default_instance_;
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> ::mediapipe::Joint* Arena::CreateMaybeMessage<::mediapipe::Joint>(Arena*);
template<> ::mediapipe::JointList* Arena::CreateMaybeMessage<::mediapipe::JointList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mediapipe {

// ===================================================================

class Joint final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.Joint) */ {
 public:
  inline Joint() : Joint(nullptr) {}
  ~Joint() override;
  explicit constexpr Joint(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Joint(const Joint& from);
  Joint(Joint&& from) noexcept
    : Joint() {
    *this = ::std::move(from);
  }

  inline Joint& operator=(const Joint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Joint& operator=(Joint&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Joint& default_instance() {
    return *internal_default_instance();
  }
  static inline const Joint* internal_default_instance() {
    return reinterpret_cast<const Joint*>(
               &_Joint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Joint& a, Joint& b) {
    a.Swap(&b);
  }
  inline void Swap(Joint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Joint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Joint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Joint>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Joint& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Joint& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Joint* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.Joint";
  }
  protected:
  explicit Joint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRotation6DFieldNumber = 1,
    kVisibilityFieldNumber = 2,
  };
  // repeated float rotation_6d = 1;
  int rotation_6d_size() const;
  private:
  int _internal_rotation_6d_size() const;
  public:
  void clear_rotation_6d();
  private:
  float _internal_rotation_6d(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_rotation_6d() const;
  void _internal_add_rotation_6d(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_rotation_6d();
  public:
  float rotation_6d(int index) const;
  void set_rotation_6d(int index, float value);
  void add_rotation_6d(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      rotation_6d() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_rotation_6d();

  // optional float visibility = 2;
  bool has_visibility() const;
  private:
  bool _internal_has_visibility() const;
  public:
  void clear_visibility();
  float visibility() const;
  void set_visibility(float value);
  private:
  float _internal_visibility() const;
  void _internal_set_visibility(float value);
  public:

  // @@protoc_insertion_point(class_scope:mediapipe.Joint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > rotation_6d_;
  float visibility_;
  friend struct ::TableStruct_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto;
};
// -------------------------------------------------------------------

class JointList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.JointList) */ {
 public:
  inline JointList() : JointList(nullptr) {}
  ~JointList() override;
  explicit constexpr JointList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JointList(const JointList& from);
  JointList(JointList&& from) noexcept
    : JointList() {
    *this = ::std::move(from);
  }

  inline JointList& operator=(const JointList& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointList& operator=(JointList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JointList& default_instance() {
    return *internal_default_instance();
  }
  static inline const JointList* internal_default_instance() {
    return reinterpret_cast<const JointList*>(
               &_JointList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(JointList& a, JointList& b) {
    a.Swap(&b);
  }
  inline void Swap(JointList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JointList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JointList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const JointList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const JointList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.JointList";
  }
  protected:
  explicit JointList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJointFieldNumber = 1,
  };
  // repeated .mediapipe.Joint joint = 1;
  int joint_size() const;
  private:
  int _internal_joint_size() const;
  public:
  void clear_joint();
  ::mediapipe::Joint* mutable_joint(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::Joint >*
      mutable_joint();
  private:
  const ::mediapipe::Joint& _internal_joint(int index) const;
  ::mediapipe::Joint* _internal_add_joint();
  public:
  const ::mediapipe::Joint& joint(int index) const;
  ::mediapipe::Joint* add_joint();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::Joint >&
      joint() const;

  // @@protoc_insertion_point(class_scope:mediapipe.JointList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::Joint > joint_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Joint

// repeated float rotation_6d = 1;
inline int Joint::_internal_rotation_6d_size() const {
  return rotation_6d_.size();
}
inline int Joint::rotation_6d_size() const {
  return _internal_rotation_6d_size();
}
inline void Joint::clear_rotation_6d() {
  rotation_6d_.Clear();
}
inline float Joint::_internal_rotation_6d(int index) const {
  return rotation_6d_.Get(index);
}
inline float Joint::rotation_6d(int index) const {
  // @@protoc_insertion_point(field_get:mediapipe.Joint.rotation_6d)
  return _internal_rotation_6d(index);
}
inline void Joint::set_rotation_6d(int index, float value) {
  rotation_6d_.Set(index, value);
  // @@protoc_insertion_point(field_set:mediapipe.Joint.rotation_6d)
}
inline void Joint::_internal_add_rotation_6d(float value) {
  rotation_6d_.Add(value);
}
inline void Joint::add_rotation_6d(float value) {
  _internal_add_rotation_6d(value);
  // @@protoc_insertion_point(field_add:mediapipe.Joint.rotation_6d)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Joint::_internal_rotation_6d() const {
  return rotation_6d_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Joint::rotation_6d() const {
  // @@protoc_insertion_point(field_list:mediapipe.Joint.rotation_6d)
  return _internal_rotation_6d();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Joint::_internal_mutable_rotation_6d() {
  return &rotation_6d_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Joint::mutable_rotation_6d() {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.Joint.rotation_6d)
  return _internal_mutable_rotation_6d();
}

// optional float visibility = 2;
inline bool Joint::_internal_has_visibility() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Joint::has_visibility() const {
  return _internal_has_visibility();
}
inline void Joint::clear_visibility() {
  visibility_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float Joint::_internal_visibility() const {
  return visibility_;
}
inline float Joint::visibility() const {
  // @@protoc_insertion_point(field_get:mediapipe.Joint.visibility)
  return _internal_visibility();
}
inline void Joint::_internal_set_visibility(float value) {
  _has_bits_[0] |= 0x00000001u;
  visibility_ = value;
}
inline void Joint::set_visibility(float value) {
  _internal_set_visibility(value);
  // @@protoc_insertion_point(field_set:mediapipe.Joint.visibility)
}

// -------------------------------------------------------------------

// JointList

// repeated .mediapipe.Joint joint = 1;
inline int JointList::_internal_joint_size() const {
  return joint_.size();
}
inline int JointList::joint_size() const {
  return _internal_joint_size();
}
inline void JointList::clear_joint() {
  joint_.Clear();
}
inline ::mediapipe::Joint* JointList::mutable_joint(int index) {
  // @@protoc_insertion_point(field_mutable:mediapipe.JointList.joint)
  return joint_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::Joint >*
JointList::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.JointList.joint)
  return &joint_;
}
inline const ::mediapipe::Joint& JointList::_internal_joint(int index) const {
  return joint_.Get(index);
}
inline const ::mediapipe::Joint& JointList::joint(int index) const {
  // @@protoc_insertion_point(field_get:mediapipe.JointList.joint)
  return _internal_joint(index);
}
inline ::mediapipe::Joint* JointList::_internal_add_joint() {
  return joint_.Add();
}
inline ::mediapipe::Joint* JointList::add_joint() {
  ::mediapipe::Joint* _add = _internal_add_joint();
  // @@protoc_insertion_point(field_add:mediapipe.JointList.joint)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::Joint >&
JointList::joint() const {
  // @@protoc_insertion_point(field_list:mediapipe.JointList.joint)
  return joint_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mediapipe

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fframework_2fformats_2fbody_5frig_2eproto
